
package proxy;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ControladorUsuarioPublicador", targetNamespace = "http://servidor/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ControladorUsuarioPublicador {


    /**
     * 
     * @return
     *     returns proxy.DataUsuarioArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/listarUsuariosRequest", output = "http://servidor/ControladorUsuarioPublicador/listarUsuariosResponse")
    public DataUsuarioArray listarUsuarios();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/existeUsuario2Request", output = "http://servidor/ControladorUsuarioPublicador/existeUsuario2Response")
    public boolean existeUsuario2(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns proxy.DataUsuario
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/obtenerUsuarioRequest", output = "http://servidor/ControladorUsuarioPublicador/obtenerUsuarioResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://servidor/ControladorUsuarioPublicador/obtenerUsuario/Fault/Exception")
    })
    public DataUsuario obtenerUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns proxy.DataRestauranteArray
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/listarRestaurantes2Request", output = "http://servidor/ControladorUsuarioPublicador/listarRestaurantes2Response", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://servidor/ControladorUsuarioPublicador/listarRestaurantes2/Fault/Exception")
    })
    public DataRestauranteArray listarRestaurantes2(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/getImageRequest", output = "http://servidor/ControladorUsuarioPublicador/getImageResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://servidor/ControladorUsuarioPublicador/getImage/Fault/Exception")
    })
    public byte[] getImage(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws Exception_Exception
    ;

    /**
     * 
     * @param password
     * @param fechaNacimiento
     * @param nickName
     * @param apellido
     * @param direccion
     * @param nombre
     * @param nombreImagen
     * @param email
     * @throws Exception_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/ControladorUsuarioPublicador/registrarClienteRequest", output = "http://servidor/ControladorUsuarioPublicador/registrarClienteResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://servidor/ControladorUsuarioPublicador/registrarCliente/Fault/Exception")
    })
    public void registrarCliente(
        @WebParam(name = "email", partName = "email")
        String email,
        @WebParam(name = "nickName", partName = "nickName")
        String nickName,
        @WebParam(name = "password", partName = "password")
        String password,
        @WebParam(name = "direccion", partName = "direccion")
        DataDireccion direccion,
        @WebParam(name = "nombre", partName = "nombre")
        String nombre,
        @WebParam(name = "apellido", partName = "apellido")
        String apellido,
        @WebParam(name = "fechaNacimiento", partName = "fechaNacimiento")
        XMLGregorianCalendar fechaNacimiento,
        @WebParam(name = "nombreImagen", partName = "nombreImagen")
        String nombreImagen)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns proxy.DataRestauranteArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/listarRestaurantesRequest", output = "http://servidor/ControladorUsuarioPublicador/listarRestaurantesResponse")
    public DataRestauranteArray listarRestaurantes();

    /**
     * 
     * @param arg0
     * @return
     *     returns proxy.DataProductoArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/listarProductosRequest", output = "http://servidor/ControladorUsuarioPublicador/listarProductosResponse")
    public DataProductoArray listarProductos(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns proxy.DataClienteArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/listarClientesRequest", output = "http://servidor/ControladorUsuarioPublicador/listarClientesResponse")
    public DataClienteArray listarClientes();

    /**
     * 
     * @param arg0
     * @return
     *     returns proxy.DataPedidoArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/listarPedidosClienteRequest", output = "http://servidor/ControladorUsuarioPublicador/listarPedidosClienteResponse")
    public DataPedidoArray listarPedidosCliente(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/existeUsuarioRequest", output = "http://servidor/ControladorUsuarioPublicador/existeUsuarioResponse")
    public boolean existeUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns proxy.DataCategoriaArray
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/ControladorUsuarioPublicador/listarCategoriasRequest", output = "http://servidor/ControladorUsuarioPublicador/listarCategoriasResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://servidor/ControladorUsuarioPublicador/listarCategorias/Fault/Exception")
    })
    public DataCategoriaArray listarCategorias(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws Exception_Exception
    ;

}
