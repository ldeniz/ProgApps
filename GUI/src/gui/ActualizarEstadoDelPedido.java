/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import datatype.DataPedido;
import datatype.DataPedidoProduco;
import datatype.EnumEstado;
import static datatype.EnumEstado.ENVIADO;
import static datatype.EnumEstado.PREPARACION;
import static datatype.EnumEstado.RECIBIDO;
import fabrica.Fabrica;
import interfaces.IControladorPedido;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mathi
 */
public class ActualizarEstadoDelPedido extends javax.swing.JInternalFrame {
    private IControladorPedido iPed = Fabrica.getInstance().obtenerControladorPedido();
    HashMap<Integer, DataPedido> elPedido = new HashMap<>();
    DataPedido pedidoACambiar;
    /**
     * Creates new form ActualizarEstadoDelPedido
     */
    public ActualizarEstadoDelPedido() {
        initComponents();
        
        
        ArrayList<DataPedido> lPedido = iPed.listarPedidos();
        for (DataPedido pedido : lPedido) {
           
            elPedido.put(modeloTabla.getRowCount(), pedido);
            String[] fila = new String[3];
            fila[0] = Integer.toString(pedido.getNumero());
            fila[1] = pedido.getNickNameCliente();
            fila[2] = pedido.getNickNameRestaurante();
            
            modeloTabla.addRow(fila);          
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        modeloTabla = new DefaultTableModel(); modeloTabla.addColumn("Id Pedido"); modeloTabla.addColumn("Cliente"); modeloTabla.addColumn("Restaurante");
        pedidos = new javax.swing.JTable(){     public boolean isCellEditable(int row, int column) {         return (column == 23 );     } };
        jButtonCancelar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        modeloCombo = new DefaultComboBoxModel<>();
        jComboBoxEstado = new javax.swing.JComboBox();

        setTitle("Actualizar estado del Pedido");

        jLabel1.setText("Pedidos Registrados:");

        pedidos.setModel(modeloTabla);
        pedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pedidos);

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonActualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jLabel2.setText("Selecciona un estado para el pedido:");

        jComboBoxEstado.setModel(modeloCombo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCancelar)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jButtonActualizar))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void pedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pedidosMouseClicked
        modeloCombo.removeAllElements();
        boolean actualizar = false;
        if (pedidos.getSelectedRow() != -1){
            pedidoACambiar = elPedido.get(pedidos.getSelectedRow());
            
            EnumEstado e = pedidoACambiar.getEstado();
            if (e == PREPARACION){
                modeloCombo.addElement("RECIBIDO");
                modeloCombo.addElement("ENVIADO");
                actualizar = true;
            }
            else if (e == ENVIADO){
                modeloCombo.addElement("RECIBIDO");
                actualizar = true;
            }
            else if (e== RECIBIDO){
                actualizar = false;
            }
            if (actualizar){}
            //ACTUALIZAR EL PEDIDO   
        }
    }//GEN-LAST:event_pedidosMouseClicked

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        
        iPed.seleccionarPedido(pedidoACambiar.getNumero());
        if (jComboBoxEstado.getSelectedItem() == "ENVIADO"){
                iPed.seleccionarEstado(ENVIADO);
        }
        else if (jComboBoxEstado.getSelectedItem() == "RECIBIDO"){
            iPed.seleccionarEstado(RECIBIDO);
        }
        
        try {
            iPed.actualizarPedido();
        } catch (Exception ex) {
            Logger.getLogger(ActualizarEstadoDelPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this,"Pedido Actualizado Correctamente");
    }//GEN-LAST:event_jButtonActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JComboBox jComboBoxEstado;
    private DefaultComboBoxModel modeloCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pedidos;
    private DefaultTableModel modeloTabla;
    // End of variables declaration//GEN-END:variables
}
