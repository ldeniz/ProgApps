/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import datatype.DataDireccion;
import datatype.EnumEstado;
import fabrica.Fabrica;
import interfaces.IControladorCategoria;
import interfaces.IControladorPedido;
import interfaces.IControladorProducto;
import interfaces.IControladorUsuario;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;
import java.util.Properties;

/**
 *
 * @author Mathi
 */
public class Principal extends javax.swing.JFrame {

    Properties propiedades = new Properties();

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        menu = new javax.swing.JMenuBar();
        inicio = new javax.swing.JMenu();
        generarPedido = new javax.swing.JMenuItem();
        cancelarPedido = new javax.swing.JMenuItem();
        actualizarEstadoPedido = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        actualizarProducto = new javax.swing.JMenuItem();
        registro = new javax.swing.JMenu();
        registrarCliente = new javax.swing.JMenuItem();
        registrarRestaurante = new javax.swing.JMenuItem();
        registrarProducto = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        altaCategoria = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        datosPrueba = new javax.swing.JMenuItem();
        informacion = new javax.swing.JMenu();
        verInfoCliente = new javax.swing.JMenuItem();
        verInfoRestaurante = new javax.swing.JMenuItem();
        verInfoProducto = new javax.swing.JMenuItem();
        verInfoPedido = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setSize(new java.awt.Dimension(1024, 768));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 736, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );

        inicio.setText("Inicio");

        generarPedido.setText("Generar Pedido");
        generarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarPedidoActionPerformed(evt);
            }
        });
        inicio.add(generarPedido);

        cancelarPedido.setText("Cancelar Pedido");
        cancelarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarPedidoActionPerformed(evt);
            }
        });
        inicio.add(cancelarPedido);

        actualizarEstadoPedido.setText("Actualizar Estado del Pedido");
        actualizarEstadoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarEstadoPedidoActionPerformed(evt);
            }
        });
        inicio.add(actualizarEstadoPedido);
        inicio.add(jSeparator1);

        actualizarProducto.setText("Actualizar Producto");
        actualizarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarProductoActionPerformed(evt);
            }
        });
        inicio.add(actualizarProducto);

        menu.add(inicio);

        registro.setText("Registro");

        registrarCliente.setText("Registrar Cliente");
        registrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarClienteActionPerformed(evt);
            }
        });
        registro.add(registrarCliente);

        registrarRestaurante.setText("Registrar Restaurante");
        registrarRestaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarRestauranteActionPerformed(evt);
            }
        });
        registro.add(registrarRestaurante);

        registrarProducto.setText("Registrar Producto");
        registrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarProductoActionPerformed(evt);
            }
        });
        registro.add(registrarProducto);
        registro.add(jSeparator2);

        altaCategoria.setText("Alta Categoría");
        altaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altaCategoriaActionPerformed(evt);
            }
        });
        registro.add(altaCategoria);
        registro.add(jSeparator4);

        datosPrueba.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        datosPrueba.setText("Cargar Datos de Prueba");
        datosPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datosPruebaActionPerformed(evt);
            }
        });
        registro.add(datosPrueba);

        menu.add(registro);

        informacion.setText("Información");

        verInfoCliente.setText("Ver Información de Cliente");
        verInfoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verInfoClienteActionPerformed(evt);
            }
        });
        informacion.add(verInfoCliente);

        verInfoRestaurante.setText("Ver Información de Restaurante");
        verInfoRestaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verInfoRestauranteActionPerformed(evt);
            }
        });
        informacion.add(verInfoRestaurante);

        verInfoProducto.setText("Ver Información de Producto");
        verInfoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verInfoProductoActionPerformed(evt);
            }
        });
        informacion.add(verInfoProducto);

        verInfoPedido.setText("Ver Información de Pedido");
        verInfoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verInfoPedidoActionPerformed(evt);
            }
        });
        informacion.add(verInfoPedido);

        menu.add(informacion);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarClienteActionPerformed
        RegistrarCliente f = new RegistrarCliente();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_registrarClienteActionPerformed

    private void registrarRestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarRestauranteActionPerformed
        RegistrarRestaurante f = new RegistrarRestaurante();
        jDesktopPane1.add(f);
        f.show();          // TODO add your handling code here:
    }//GEN-LAST:event_registrarRestauranteActionPerformed

    private void altaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altaCategoriaActionPerformed
        AltaCategoria f = new AltaCategoria();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_altaCategoriaActionPerformed

    private void registrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarProductoActionPerformed
        RegistrarProducto f = new RegistrarProducto();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_registrarProductoActionPerformed

    private void generarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarPedidoActionPerformed
        GenerarPedido f = new GenerarPedido();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_generarPedidoActionPerformed

    private void cancelarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarPedidoActionPerformed
        CancelarPedido f = new CancelarPedido();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_cancelarPedidoActionPerformed

    private void actualizarEstadoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarEstadoPedidoActionPerformed
        ActualizarEstadoDelPedido f = new ActualizarEstadoDelPedido();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_actualizarEstadoPedidoActionPerformed

    private void actualizarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarProductoActionPerformed
        ActualizarProducto f = new ActualizarProducto();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_actualizarProductoActionPerformed

    private void verInfoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verInfoClienteActionPerformed
        VerInformacionDeCliente f = new VerInformacionDeCliente();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_verInfoClienteActionPerformed

    private void verInfoRestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verInfoRestauranteActionPerformed
        VerInformacionDeRestaurante f = new VerInformacionDeRestaurante();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_verInfoRestauranteActionPerformed

    private void verInfoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verInfoProductoActionPerformed
        VerInformacionDeProducto f = new VerInformacionDeProducto();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_verInfoProductoActionPerformed

    private void verInfoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verInfoPedidoActionPerformed
        VerInformacionDePedido f = new VerInformacionDePedido();
        jDesktopPane1.add(f);
        f.show();
    }//GEN-LAST:event_verInfoPedidoActionPerformed

    private void datosPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datosPruebaActionPerformed

        datosPrueba.setVisible(false);
        // CARGAR DATOS DE PRUEBA
        IControladorCategoria c = Fabrica.getInstance().obtenerControladorCategoria();
        IControladorUsuario u = Fabrica.getInstance().obtenerControladorUsuario();
        IControladorProducto p = Fabrica.getInstance().obtenerControladorProducto();
        IControladorPedido pd = Fabrica.getInstance().obtenerControladorPedido();

        //Carga Archivo de Propiedades ----------------------
        InputStream entrada = null;
        try {
            entrada = this.getClass().getResourceAsStream("/Resources/config.properties");
            propiedades.load(entrada);
        } catch (IOException ex) {
            ex.printStackTrace();
        }

        System.out.println(VerInformacionDeRestaurante.VIDR);
        //---------------------------------------------------

        u.CargarDatosUsuario("costas", "gcostas@gmail.com", "Gerardo", "1234",
                new DataDireccion("Av. Italia", "2078", null), "Costas",
                new Date(1983, 11, 15), propiedades.getProperty("rutaDeCarga") + "costas.jpg");
        u.altaUsuario();
        u.CargarDatosUsuario("roro", "rcotelo@yahoo.com", "Rodrigo", "  1234",
                new DataDireccion("Pdte. Berro", "1548", null), "Cotelo",
                new Date(1975, 8, 2), propiedades.getProperty("rutaDeCarga") + "roro.jpg");
        u.altaUsuario();
        u.CargarDatosUsuario("chechi", "cgarrido@hotmail.com", "Cecilia", "  1234",
                new DataDireccion("Gral. Urquiza", "1548", null), "Garrido",
                new Date(1987, 9, 12), propiedades.getProperty("rutaDeCarga") + "chechi.jpg");
        u.altaUsuario();
        u.CargarDatosUsuario("andy", "agarcia@gmail.com", "Andrea", "  1234",
                new DataDireccion("Dr. Manuel Albo ", "4512", null), "García",
                new Date(1951, 7, 28), propiedades.getProperty("rutaDeCarga") + "andy.jpg");
        u.altaUsuario();
        u.CargarDatosUsuario("weiss", "aweiss@hotmail.com", "Adrian", "  1234",
                new DataDireccion("Monte Caseros ", "5615", null), "Weiss",
                new Date(1978, 12, 23), propiedades.getProperty("rutaDeCarga") + "weiss.jpg");
        u.altaUsuario();

        c.altaCategoria("Chivitos");
        c.altaCategoria("Minutas");
        c.altaCategoria("Parrilla");
        c.altaCategoria("Pizzas");
        c.altaCategoria("Empanadas");
        c.altaCategoria("Milanesas");
        c.altaCategoria("Ensaladas");
        c.altaCategoria("Pastas");
        c.altaCategoria("Comida China");
        c.altaCategoria("Picadas");
        c.altaCategoria("Woks");
        c.altaCategoria("Comica Mexicana");
        c.altaCategoria("Entradas");
        c.altaCategoria("Bebidas");
        c.altaCategoria("Sushi");

        String[] rutaImagen = null;
        u.seleccionarCategoria("Chivitos");
        u.seleccionarCategoria("Minutas");
        u.seleccionarCategoria("Parrilla");
        u.seleccionarCategoria("Pizzas");
        try {
            u.CargarDatosUsuario("mera", "mera@hotmail.com", "Pizzeria Mera", "123",
                    new DataDireccion("Av. 8 de Octubre", "2074", null), rutaImagen);
        } catch (Exception ex) {
            //Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        u.altaUsuario();
        u.limpiarMemoria();

        String[] rutaImagen2 = {propiedades.getProperty("rutaDeCarga") + "BR1.png", "b"};
        u.seleccionarCategoria("Chivitos");
        u.seleccionarCategoria("Milanesas");
        u.seleccionarCategoria("Pastas");
        u.seleccionarCategoria("Pizzas");
        try {
            u.CargarDatosUsuario("rossell", "bar.rossel@gmail.com", "Bar Rossell", "123",
                    new DataDireccion("Bvar. Artigas ", "1601", null), rutaImagen2);
        } catch (Exception ex) {
            //    Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        u.altaUsuario();
        u.limpiarMemoria();

        String[] rutaImagen3 = {propiedades.getProperty("rutaDeCarga") + "EB1.png", "b"};
        u.seleccionarCategoria("Empanadas");
        try {
            u.CargarDatosUsuario("bocatti", "bocatti@gmail.com", "Empanadas Bocatti", "123",
                    new DataDireccion("18 de julio ", "2138", null), rutaImagen3);
        } catch (Exception ex) {
            //  Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        u.altaUsuario();
        u.limpiarMemoria();

        String[] rutaImagen4 = {propiedades.getProperty("rutaDeCarga") + "WB1.jpg", "b"};
        u.seleccionarCategoria("Woks");
        u.seleccionarCategoria("Comida China");
        u.seleccionarCategoria("Pastas");
        try {
            u.CargarDatosUsuario("winb", "wok.in.box@hotmail.com", "Wok in Box", "123",
                    new DataDireccion("Libertad ", "2535", null), rutaImagen4);
        } catch (Exception ex) {
            //Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        u.altaUsuario();
        u.limpiarMemoria();

        //INDIVIDUALES
        p.seleccionarRestaurante("mera");
        p.cargarDatosProducto("Asado", "Asado a la parrilla", (float) 225.0, null);
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Milanesa de Carne", "Con lechuga, tomate, mayonesa y fritas", (float) 180.0, propiedades.getProperty("rutaDeCarga") + "MCM.jpg");
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Chivito Canadiense", "Lomito, jamón, muzza, tomate, aceitunas, panceta, huevo, morrón y fritas", (float) 305.0, propiedades.getProperty("rutaDeCarga") + "CCM.jpg");
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Pizza 2 Gustos", "Pizza con dos gustos a elección", (float) 130.0, null);
        p.altaProducto();
        p.limpiarMemoria();

        p.seleccionarRestaurante("rossell");
        p.cargarDatosProducto("Chivito al plato", "Ensalada rusa, mixta, huevo, jamón, muzza, panceta, aceitunas y fritas", (float) 324.0, null);
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Milanesa a caballo", "Milanesa con dos huevos fritos acompañado de fritas", (float) 270.0, propiedades.getProperty("rutaDeCarga") + "MCR.jpg");
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Pizza con 2 gustos", "Pizza con dos gustos a elección", (float) 103.0, null);
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Agnolotis", "Agnolotis de jamón y queso", (float) 225.0, propiedades.getProperty("rutaDeCarga") + "PAR.jpg");
        p.altaProducto();
        p.limpiarMemoria();

        p.seleccionarRestaurante("bocatti");
        p.cargarDatosProducto("Empanada de Carne", "Carne, aceitunas, huevo duro, condimentos", (float) 44.0, propiedades.getProperty("rutaDeCarga") + "ECB.jpg");
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Empanada Americana", "Carne, panceta y huevo duro", (float) 44.0, null);
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Empanada QyC", "Empanada de Queso y Cebolla", (float) 44.0, propiedades.getProperty("rutaDeCarga") + "EQB.jpg");
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Empanada Capresse", "Queso, tomate y albahaca", (float) 44.0, propiedades.getProperty("rutaDeCarga") + "ECA.jpg");
        p.altaProducto();
        p.limpiarMemoria();

        p.seleccionarRestaurante("winb");
        p.cargarDatosProducto("Thai wok", "Cerdo, calamares, sweet chili, salsa de ostras, maní y jugo de lima, acompañado de tallarines o arroz.", (float) 240.0, propiedades.getProperty("rutaDeCarga") + "TWW.jpg");
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("China wok", "Tempura de cerdo, vegetales mixtos, almendras, salsa de soja y naranja, acompañado de tallarines o arroz.", (float) 240.0, null);
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Classic wok de pollo", "Pollo, vegetales mixtos, salsa agridulce, salsa de soja y cebollita de verdeo, acompañado de tallarines o arroz.", (float) 230.0, propiedades.getProperty("rutaDeCarga") + "CPW.jpg");
        p.altaProducto();
        p.limpiarMemoria();
        p.cargarDatosProducto("Classic wok de cerdo", "Cerdo, vegetales mixtos, jengibre, salsa de ostras y ralladura de lima, acompañado de tallarines o arroz.", (float) 230.0, null);
        p.altaProducto();
        p.limpiarMemoria();

        //PROMOCIONES
        p.seleccionarRestaurante("mera");
        p.cargarDatosProducto("ChiviPizza", "Chivito y Pizza", 20, null);
        p.seleccionarProducto("Chivito Canadiense", 1);
        p.seleccionarProducto("Pizza 2 Gustos", 1);
        p.altaProducto();
        p.limpiarMemoria();

        p.cargarDatosProducto("MilaAsado", "3 Milanesas + 1 Asado para compartir", 30, null);
        p.seleccionarProducto("Milanesa de Carne", 3);
        p.seleccionarProducto("Asado", 1);
        p.altaProducto();
        p.limpiarMemoria();

        p.seleccionarRestaurante("rossell");
        p.cargarDatosProducto("MilaPizza", "2 Milanesas a caballo + 1 Pizzas 2 gustos", 10, null);
        p.seleccionarProducto("Milanesa a caballo", 2);
        p.seleccionarProducto("Pizza con 2 gustos", 1);
        p.altaProducto();
        p.limpiarMemoria();

        //PEDIDOS
        try {
            pd.seleccionarCliente("costas");
        } catch (Exception ex) {
            //Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarRestaurante("bocatti");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarProducto("bocatti", "Empanada de Carne", 1);
            pd.seleccionarProducto("bocatti", "Empanada Americana", 2);
            pd.seleccionarProducto("bocatti", "Empanada QyC", 2);
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        pd.finalizarPedido();
        pd.limpiarMermoria();
        //--------
        try {
            pd.seleccionarCliente("roro");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarRestaurante("mera");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarProducto("mera", "Asado", 3);
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        pd.finalizarPedido();
        pd.limpiarMermoria();

        pd.seleccionarPedido(2);
        pd.seleccionarEstado(EnumEstado.ENVIADO);
        try {
            pd.actualizarPedido();
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        //--------
        try {
            pd.seleccionarCliente("chechi");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarRestaurante("winb");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarProducto("winb", "Thai wok", 2);
            pd.seleccionarProducto("winb", "China wok", 3);
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        pd.finalizarPedido();
        pd.limpiarMermoria();

        pd.seleccionarPedido(3);
        pd.seleccionarEstado(EnumEstado.RECIBIDO);
        try {
            pd.actualizarPedido();
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        //--------
        try {
            pd.seleccionarCliente("andy");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarRestaurante("mera");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarProducto("mera", "Chivito Canadiense", 4);
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        pd.finalizarPedido();
        pd.limpiarMermoria();

        pd.seleccionarPedido(4);
        pd.seleccionarEstado(EnumEstado.RECIBIDO);
        try {
            pd.actualizarPedido();
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        //--------
        try {
            pd.seleccionarCliente("weiss");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarRestaurante("rossell");
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pd.seleccionarProducto("rossell", "Agnolotis", 1);
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

        pd.finalizarPedido();
        pd.limpiarMermoria();

        pd.seleccionarPedido(5);
        pd.seleccionarEstado(EnumEstado.RECIBIDO);
        try {
            pd.actualizarPedido();
        } catch (Exception ex) {
//            Logger.getLogger(ServidorCentral.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_datosPruebaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem actualizarEstadoPedido;
    private javax.swing.JMenuItem actualizarProducto;
    private javax.swing.JMenuItem altaCategoria;
    private javax.swing.JMenuItem cancelarPedido;
    private javax.swing.JMenuItem datosPrueba;
    private javax.swing.JMenuItem generarPedido;
    private javax.swing.JMenu informacion;
    private javax.swing.JMenu inicio;
    public static javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem registrarCliente;
    private javax.swing.JMenuItem registrarProducto;
    private javax.swing.JMenuItem registrarRestaurante;
    private javax.swing.JMenu registro;
    private javax.swing.JMenuItem verInfoCliente;
    private javax.swing.JMenuItem verInfoPedido;
    private javax.swing.JMenuItem verInfoProducto;
    private javax.swing.JMenuItem verInfoRestaurante;
    // End of variables declaration//GEN-END:variables
}
