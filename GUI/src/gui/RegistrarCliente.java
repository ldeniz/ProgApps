/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controlador.ControladorUsuario;
import datatype.DataDireccion;
import java.util.Properties;
import fabrica.Fabrica;
import interfaces.IControladorCategoria;
import interfaces.IControladorUsuario;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.nio.channels.FileChannel;
import java.util.Date;
import javax.annotation.Resources;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Mathi
 */
public class RegistrarCliente extends javax.swing.JInternalFrame {
    private
        String imagenSrc, Extension;
        String outFile, inFile;
        String apellido;
        Date fecha;
        String nick;
        String nombre;
        String mail;
        DataDireccion direccion;
        IControladorUsuario cU;
        String password;
        String confirmaPassword;
        Properties propiedades;
        
    /**
     * Creates new form RegistrarCliente
     */
    public RegistrarCliente() {
        
        imagenSrc="";
        outFile="";
        initComponents();
        jLabelNick.setText("");
        jLabelMail.setText("");
        //jFileChooser1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JTextFieldNickname = new javax.swing.JTextField();
        jLabelNick = new javax.swing.JLabel();
        jLabelMail = new javax.swing.JLabel();
        JTextFieldCorreo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPasswordFieldPass = new javax.swing.JPasswordField();
        jPasswordFieldRePass = new javax.swing.JPasswordField();
        JTextFieldNombre = new javax.swing.JTextField();
        JTextFieldApellido = new javax.swing.JTextField();
        JTextFieldDireccion = new javax.swing.JTextField();
        jSpinnerDia = new javax.swing.JSpinner();
        jSpinnerMes = new javax.swing.JSpinner();
        jSpinnerAnio = new javax.swing.JSpinner();
        jButtonImage = new javax.swing.JButton();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setTitle("Registrar Cliente");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Ingrese los siguientes Datos:");

        jLabel2.setText("Nickname");

        JTextFieldNickname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldNicknameActionPerformed(evt);
            }
        });

        jLabelNick.setForeground(new java.awt.Color(255, 0, 0));
        jLabelNick.setText("etiqueta");

        jLabelMail.setForeground(new java.awt.Color(255, 0, 0));
        jLabelMail.setText("etiqueta");

        jLabel5.setText("Correo");

        jLabel10.setText("Contraseña");

        jLabel11.setText("Confirmar contraseña");

        jLabel6.setText("Nombre");

        jLabel7.setText("Apellido");

        jLabel8.setText("Direccion");
        jLabel8.setToolTipText("");

        jLabel9.setText("Fecha de Nacimiento");

        JTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldNombreActionPerformed(evt);
            }
        });

        JTextFieldApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldApellidoActionPerformed(evt);
            }
        });

        JTextFieldDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextFieldDireccionActionPerformed(evt);
            }
        });

        jSpinnerDia.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jSpinnerMes.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jSpinnerAnio.setModel(new javax.swing.SpinnerNumberModel(1900, 1800, 2014, 1));

        jButtonImage.setText("Seleccionar Imagen");
        jButtonImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImageActionPerformed(evt);
            }
        });

        jButtonRegistrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11))
                            .addGap(10, 10, 10))))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JTextFieldNickname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(jLabelNick, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JTextFieldCorreo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelMail, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPasswordFieldPass, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPasswordFieldRePass, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JTextFieldNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTextFieldApellido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTextFieldDireccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jButtonImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(322, Short.MAX_VALUE)
                .addComponent(jButtonCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRegistrar))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jSpinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(JTextFieldNickname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jLabelNick)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(JTextFieldCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jPasswordFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jPasswordFieldRePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(JTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(JTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(JTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinnerMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinnerAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonImage)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRegistrar)
                            .addComponent(jButtonCancelar))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTextFieldNicknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldNicknameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextFieldNicknameActionPerformed

    private void JTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextFieldNombreActionPerformed

    private void JTextFieldApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextFieldApellidoActionPerformed

    private void JTextFieldDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTextFieldDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTextFieldDireccionActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImageActionPerformed
        FileFilter filter = new FileNameExtensionFilter("Imagenes (.jpg .png)","jpg", "png");

        JFileChooser elegirImagen = new JFileChooser();
        elegirImagen.setAcceptAllFileFilterUsed(false);
        elegirImagen.addChoosableFileFilter(filter);
        int opt = elegirImagen.showOpenDialog(jButtonImage);

        
        if (opt == JFileChooser.APPROVE_OPTION) {
            imagenSrc = elegirImagen.getSelectedFile().getPath();
            
            String NombreArchivo = elegirImagen.getSelectedFile().getName();
            Extension = NombreArchivo.substring(NombreArchivo.lastIndexOf("."),NombreArchivo.length());
            
            if(imagenSrc==null){
                
                //Habría que agregarle una imagen por defecto si no tiene

            }
            else{
               
                Image image = Toolkit.getDefaultToolkit().createImage(imagenSrc);
                Icon warnIcon = new ImageIcon(image.getScaledInstance(jLabel3.getWidth(), jLabel3.getHeight(), image.SCALE_DEFAULT));
                jLabel3.setIcon(warnIcon);
                jLabel3.validate();
                
            }
        }

    }//GEN-LAST:event_jButtonImageActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        IControladorUsuario cU = Fabrica.getInstance().obtenerControladorUsuario();
        boolean existeNick,existeUsu,passwordIguales;
        nick=JTextFieldNickname.getText();    
        nombre=JTextFieldNombre.getText();    
        apellido=JTextFieldApellido.getText();
        mail=JTextFieldCorreo.getText();
        direccion=new DataDireccion(JTextFieldDireccion.getText(),"","");
        password=jPasswordFieldPass.getText();
        confirmaPassword=jPasswordFieldRePass.getText();
        fecha=new Date((int)jSpinnerDia.getValue(),(int)jSpinnerDia.getValue(),(int)jSpinnerDia.getValue());
    
    
    if (!mail.contains("@") || !mail.contains(".") ||mail.length()<4){
        JOptionPane.showMessageDialog(this, "Verifique el Mail", "", JOptionPane.WARNING_MESSAGE);
    }
    else{
        
    
    
        if ("".equals(apellido) ||"".equals(nick) ||"".equals(nombre) ||"".equals(mail) ||"".equals(direccion)
                ||"".equals(password)||"".equals(confirmaPassword)){
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos", "", JOptionPane.WARNING_MESSAGE);
        }
        else{
            existeNick=cU.existeUsuario(nick);
            existeUsu=cU.existeUsuario(nick,mail);
            passwordIguales=password.equals(confirmaPassword);

            if ( !existeUsu && !existeNick && passwordIguales){
                
                //Carga Archivo de Propiedades ----------------------
                propiedades = new Properties();
                InputStream entrada = null;
                try {               
                    entrada = this.getClass().getResourceAsStream("/Resources/config.properties");
                    propiedades.load(entrada);
                    } 
                catch (IOException ex) {
                    ex.printStackTrace();
                } 
                //---------------------------------------------------
                String inFile = imagenSrc;
                outFile = propiedades.getProperty("imagenesClientes")+nick+Extension;
                try{
                    
                    System.out.println(inFile);
                    System.out.println(outFile);
                    
                    FileInputStream fis = new FileInputStream(inFile); //inFile -> Archivo a copiar
                    FileOutputStream fos = new FileOutputStream(outFile); //outFile -> Copia del archivo
                    
                    FileChannel inChannel = fis.getChannel();
                    FileChannel outChannel = fos.getChannel();
                    
                    inChannel.transferTo(0, inChannel.size(), outChannel);
                    fis.close();
                    fos.close();

                   }catch (IOException ioe) {
                    System.err.println("Error al Generar Copia");
                   }
                try{
                    cU.CargarDatosUsuario(nick,mail,nombre,password,direccion,apellido,fecha,outFile);
                    cU.altaUsuario();
                    JOptionPane.showMessageDialog(this, "Cliente registrado Correctamente", "", JOptionPane.INFORMATION_MESSAGE);
                    this.setVisible(false);                
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(this, e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                if (existeNick)
                    jLabelNick.setText("Ya existe usuario con ese Nick");
                else
                    jLabelNick.setText("");
                if (existeUsu && !existeNick)
                    jLabelMail.setText("Ya existe usuario con ese E-Mail");
                else
                    jLabelMail.setText("");
                if (!passwordIguales)
                    jLabelMail.setText("Las contraseñas deben ser iguales");
                else
                    jLabelMail.setText("");
            }
    }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTextFieldApellido;
    private javax.swing.JTextField JTextFieldCorreo;
    private javax.swing.JTextField JTextFieldDireccion;
    private javax.swing.JTextField JTextFieldNickname;
    private javax.swing.JTextField JTextFieldNombre;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonImage;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMail;
    private javax.swing.JLabel jLabelNick;
    private javax.swing.JPasswordField jPasswordFieldPass;
    private javax.swing.JPasswordField jPasswordFieldRePass;
    private javax.swing.JSpinner jSpinnerAnio;
    private javax.swing.JSpinner jSpinnerDia;
    private javax.swing.JSpinner jSpinnerMes;
    // End of variables declaration//GEN-END:variables

    private IControladorUsuario obtenerControladorUsuario() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
